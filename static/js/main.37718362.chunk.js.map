{"version":3,"sources":["assets/quiz.png","constants/Colors.ts","components/Button/Button.tsx","components/Input/Input.tsx","components/Icon/AvatarIcon.tsx","pages/Login/Login.tsx","utils/authHandlers.ts","utils/formValidator.ts","pages/Signup/Signup.tsx","Router/AuthRoute.tsx","components/Layout/Layout.tsx","components/Layout/Content.tsx","pages/Quiz/QuizStart/Answers.tsx","utils/shuffler.ts","pages/Quiz/QuizStart/FinalScore.tsx","pages/Quiz/QuizStart/QuizApp.tsx","utils/scoreHandler.ts","utils/quiz.ts","pages/Quiz/QuizStart.tsx","components/SideBar/SideBar.tsx","components/Menu/Menu.tsx","pages/Routes.tsx","Router/PrivateRoutes.tsx","Router/Router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Colors","load","keyframes","transform","opacity","classNames","stylesheet","button","border","outline","cursor","transition","padding","backgroundColor","BLACK","color","WHITE","position","primary","PRIMARY","boxShadow","GREY","$nest","disabled","fullWidth","width","loading","right","top","content","height","borderTopColor","borderRadius","animation","Button","props","type","buttonType","children","rest","className","classes","input","Input","placeholder","AvatarIcon","style","fill","fillOpacity","fillRule","stroke","xmlns","viewBox","d","formWrap","display","justifyContent","paddingTop","form","title","textAlign","marginBottom","avatar","inputWrap","breaker","margin","error","DANGER","Login","useState","email","setemail","password","setpassword","err","seterr","setloading","history","useHistory","autoComplete","value","onChange","e","target","onClick","login","user","window","localStorage","getItem","noExists","JSON","parse","filter","length","username","loginUser","setTimeout","setItem","push","toString","validatePassword","success","SUCCESS","Signup","setUserName","setEmail","setPassword","confirmPassword","setConfirmPassword","formValidation","setformValidation","setsuccess","handleSignup","event","preventDefault","validEmail","test","String","toLowerCase","validateEmail","validUsername","validateUserName","validPassword","validConfirmPassword","validPasswordMatch","validatePasswordMatch","state","userErr","emailErr","confirmPasswordErr","passwordErr","newUserRegistration","users","usersArray","stringify","newUser","successMsg","exists","onSubmit","AuthRoute","Fragment","to","path","component","layout","flexDirection","background","SECONDARY","minHeight","Layout","Content","answerBtn","fontSize","wrong","Answers","answers","correct","handleNextQuestion","activeIndex","setactiveIndex","wrongIndex","setwrongIndex","chosen","setChosen","score","setScore","submitEnable","setSubmitEnable","map","ans","index","key","checkAnswer","correctAnswerIndex","forEach","localeCompare","handleSelection","undefined","shuffleQuiz","data","randomIndex","Math","floor","random","scoreboard","scoreboardWrap","td","tr","table","fontFamily","borderCollapse","scoreTitle","FinalScore","totalScore","scoreBoard","setscoreBoard","useEffect","json","scoreboardList","TopTenScorer","sort","a","b","slice","console","log","location","reload","question","left","borderLeftColor","QuizApp","quiz","setindex","finalscore","setfinalScore","userScore","newScore","scorer","scoreHandler","options","correct_answer","Quiz","quizWrap","marginTop","QuizStart","start","setStart","loader","setLoader","src","QuizImage","alt","sidebar","alignItems","SideBar","menuItem","listStyle","menuItemLink","textDecoration","Menu","Routes","PrivateRoutes","Component","render","Router","basename","process","exact","App","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"8FAAAA,EAAOC,QAAU,IAA0B,kC,oGCA/BC,E,wEAAAA,K,kBAAAA,E,oBAAAA,E,aAAAA,E,aAAAA,E,eAAAA,E,kBAAAA,E,kBAAAA,M,iBCINC,EAAOC,YAAU,CACrB,KAAM,CACJC,UAAW,gBAEb,MAAO,CACLA,UAAW,iBACXC,QAAS,QAEX,OAAQ,CACND,UAAW,oBAITE,EAAaC,YAAW,CAC5BC,OAAQ,CACNC,OAAQ,OACRC,QAAS,OACTC,OAAQ,UACRC,WAAY,MACZC,QAAS,YACTC,gBAAiBb,EAAOc,MACxBC,MAAOf,EAAOgB,MACdC,SAAU,YAEZC,QAAS,CACPL,gBAAiBb,EAAOmB,QACxBJ,MAAOf,EAAOgB,MACdI,UAAU,WAAD,OAAapB,EAAOqB,MAE7BC,MAAO,CACL,WAAY,CACVF,UAAU,WAAD,OAAapB,EAAOqB,OAE/B,UAAW,CACTjB,QAAS,QAIfmB,SAAU,CACRV,gBAAiBb,EAAOqB,KACxBN,MAAOf,EAAOc,MACdJ,OAAQ,eAEVc,UAAW,CACTC,MAAO,QAETC,QAAS,CACPJ,MAAO,CACL,WAAY,CACVL,SAAU,WACVU,MAAO,MACPC,IAAK,MACLC,QAAQ,KACRJ,MAAO,OACPK,OAAQ,OACRtB,OAAO,aAAD,OAAeR,EAAOgB,OAC5Be,eAAgB,cAChBC,aAAc,MACdC,UAAU,GAAD,OAAKhC,EAAL,4BA8CFiC,EA5BA,SAACC,GAAkB,IAAD,EAS3BA,EAPFC,YAF6B,MAEtB,SAFsB,IAS3BD,EANFE,kBAH6B,MAGhB,UAHgB,EAI7BC,EAKEH,EALFG,SAJ6B,EAS3BH,EAJFZ,gBAL6B,WAS3BY,EAHFV,aAN6B,MAMrB,OANqB,IAS3BU,EAFFT,eAP6B,SAQ1Ba,EAR0B,YAS3BJ,EAT2B,+DAW/B,OACE,0CACEK,UAAWC,YACTpC,EAAWE,OACXgB,EAAWlB,EAAWkB,SAAWlB,EAAWgC,GAClC,SAAVZ,EAAmBpB,EAAWmB,UAAY,GAC1CE,EAAUrB,EAAWqB,QAAU,IAEjCU,KAAMA,EACNb,SAAUA,GACNgB,GAEHD,ICnGDjC,EAAaC,YAAW,CAC5BoC,MAAO,CACLjB,MAAO,OACPb,QAAS,OACTJ,OAAO,aAAD,OAAeR,EAAOqB,MAC5BV,WAAY,MAEZW,MAAO,CACL,UAAW,CACTd,OAAO,aAAD,OAAeR,EAAOmB,SAC5Ba,aAAc,EACdvB,QAAS,OAuBFkC,EAbD,SAACR,GAAkB,IACvBS,EAA+BT,EAA/BS,YAAaR,EAAkBD,EAAlBC,KAASG,EADA,YACSJ,EADT,wBAG9B,OACE,yCACES,YAAaA,EACbJ,UAAWnC,EAAWqC,MACtBN,KAAMA,GACFG,KCZKM,EAlBI,WACjB,IAAMC,EAA6B,CACjCC,KAAM/C,EAAOqB,KACb2B,YAAa,EACbC,SAAU,UACVC,OAAQ,OACRzB,MAAO,OACPK,OAAQ,QAGV,OACE,yBAAKqB,MAAM,6BAA6BC,QAAQ,cAAcN,MAAOA,GACnE,0BAAMO,EAAE,ycACR,0BAAMA,EAAE,qeCLRhD,EAAaC,YAAW,CAC5BgD,SAAU,CACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,QAEdC,KAAM,CACJjC,MAAO,QACPL,UAAU,WAAD,OAAapB,EAAOqB,MAC7BT,QAAS,QAEX+C,MAAO,CACLC,UAAW,SACXC,aAAc,OAEdvC,MAAO,IAETwC,OAAQ,CACNF,UAAW,SACXC,aAAc,QAEhBE,UAAW,CACTF,aAAc,QAEhBG,QAAS,CACPC,OAAQ,SACRL,UAAW,UAEbM,MAAO,CACLnD,MAAOf,EAAOmE,UA2EHC,EAvED,SAACjC,GAAkB,IAAD,EACJkC,qBADI,mBACvBC,EADuB,KAChBC,EADgB,OAEEF,qBAFF,mBAEvBG,EAFuB,KAEbC,EAFa,OAGRJ,qBAHQ,mBAGvBK,EAHuB,KAGlBC,EAHkB,OAIAN,oBAAS,GAJT,mBAIvB3C,EAJuB,KAIdkD,EAJc,KAKxBC,EAAUC,cAiBhB,OACE,yBAAKtC,UAAWnC,EAAWiD,UACzB,0BAAMd,UAAWnC,EAAWqD,KAAMqB,aAAa,OAC7C,yBAAKvC,UAAWnC,EAAWyD,QACzB,kBAAC,EAAD,OAEF,yBAAKtB,UAAWnC,EAAWsD,OACzB,kDACA,2DACA,0BAAMnB,UAAWnC,EAAW6D,OAAQQ,IAEtC,yBAAKlC,UAAWnC,EAAW0D,WACzB,kBAAC,EAAD,CACE3B,KAAK,OACLQ,YAAY,QACZoC,MAAOV,GAAS,GAChBW,SAAU,SAACC,GAAD,OAAOX,EAASW,EAAEC,OAAOH,WAGvC,yBAAKxC,UAAWnC,EAAW0D,WACzB,kBAAC,EAAD,CACE3B,KAAK,WACLQ,YAAY,YACZoC,MAAOR,GAAY,GACnBS,SAAU,SAACC,GAAD,OAAOT,EAAYS,EAAEC,OAAOH,WAG1C,kBAAC,EAAD,CACEtD,QAASA,EACTH,SAAUG,EACVW,WAAW,UACX+C,QA9CY,WAClB,IAAIC,ECzBiB,SAACf,EAAeE,GACvC,IAAIc,EAAOC,OAAOC,aAAaC,QAAQ,SAGnCC,GADFJ,GAAQK,KAAKC,MAAMN,IACIO,QACvB,SAACP,GAAD,OAAUA,EAAKhB,QAAUA,GAASgB,EAAKd,WAAaA,KAEtD,OAAIkB,EAASI,OAAS,GAAUJ,EAAS,GAAGK,SDkB9BC,CAAU1B,EAAOE,GAC7BI,GAAW,GACXqB,YAAW,WACJZ,GAGHE,OAAOC,aAAaU,QAAQ,WAAY,QACxCrB,EAAQsB,KAAK,eAHbxB,EAAO,oCAKTC,GAAW,GACXW,OAAOC,aAAaU,QAAQ,eAAgBb,EAAMe,cACjD,MAmCG3E,MAAM,QALR,SASA,yBAAKe,UAAWnC,EAAW2D,SAA3B,cACA,kBAAC,EAAD,CACE3B,WAAW,UACX+C,QAAS,kBAAMP,EAAQsB,KAAK,iBAC5B1E,MAAM,QAHR,a,OE1FK4E,EAAmB,SAAC7B,GAC/B,OAAKA,IACDA,GAAYA,EAASsB,OAAS,IACzB,wCAFa,qBCClBzF,EAAaC,YAAW,CAC5BgD,SAAU,CACRC,QAAS,OACTC,eAAgB,SAChBC,WAAY,QAEdC,KAAM,CACJjC,MAAO,QACPL,UAAU,WAAD,OAAapB,EAAOqB,MAC7BT,QAAS,QAEX+C,MAAO,CACLC,UAAW,SACXC,aAAc,OAEdvC,MAAO,IAETyC,UAAW,CACTF,aAAc,QAEhBC,OAAQ,CACNF,UAAW,SACXC,aAAc,QAEhBG,QAAS,CACPC,OAAQ,SACRL,UAAW,UAEbM,MAAO,CACLnD,MAAOf,EAAOmE,QAEhBmC,QAAS,CACPvF,MAAOf,EAAOuG,WA2MHC,EA/LA,WAAO,IAAD,EACanC,qBADb,mBACZ0B,EADY,KACFU,EADE,OAEOpC,qBAFP,mBAEZC,EAFY,KAELoC,EAFK,OAGarC,qBAHb,mBAGZG,EAHY,KAGFmC,EAHE,OAI2BtC,qBAJ3B,mBAIZuC,EAJY,KAIKC,EAJL,OAKyBxC,qBALzB,mBAKZyC,EALY,KAKIC,EALJ,OAQW1C,qBARX,mBAQZiC,EARY,KAQHU,EARG,OASW3C,oBAAS,GATpB,mBASZ3C,EATY,KASHkD,EATG,KAUbC,EAAUC,cAEVmC,EAAe,SAACC,GACpBA,EAAMC,iBACN,IAAMC,EDzEmB,SAAC9C,GAC5B,IAAKA,EAAO,MAAO,qBACnB,GAAIA,GAASA,EAAMwB,OAAS,EAAG,CAG7B,IAFmB,wJACSuB,KAAKC,OAAOhD,GAAOiD,eAC9B,MAAO,qBAG1B,OAAIjD,GAA0B,IAAjBA,EAAMwB,QAAqB,qBCiEnB0B,CAAclD,GAC3BmD,ED5CsB,SAAC1B,GAC/B,SAAKA,GAAgC,IAApBA,EAASD,SACjB,uBC0Ce4B,CAAiB3B,GACjC4B,EAAgBtB,EAAiB7B,GACjCoD,EAAuBvB,EAAiB7B,GACxCqD,EDzD2B,SACnCrD,EACAoC,GAEA,OAAIpC,IAAaoC,GACR,0BCoDoBkB,CAAsBtD,EAAUoC,GAE3D,GAA6B,kBAAlBa,EAaX,GANEV,GAAkB,SAACgB,GAAD,mBAAC,eACdA,GADa,IAEhBC,QAAS,QAIa,kBAAfZ,EAaX,GANEL,GAAkB,SAACgB,GAAD,mBAAC,eACdA,GADa,IAEhBE,SAAU,QAIe,kBAAlBN,EAaX,GANEZ,GAAkB,SAACgB,GAAD,mBAAC,eACdA,GADa,IAEhBE,SAAU,QAIsB,kBAAzBL,EASX,GAHEb,EAAkB,CAAEmB,mBAAoB,KAGR,kBAAvBL,EAAX,CAOEd,EAAkB,CAChBoB,YAAa,GACbD,mBAAoB,KAIxB,IAAIE,EF5Ie,SACrB9D,EACAE,EACAuB,GAEA,IAAIsC,EAAQ9C,OAAOC,aAAaC,QAAQ,SACxC,GAAI4C,EAAO,CACT,IAAIC,EAIC3C,KAAKC,MAAMyC,GAEhB,OADaC,EAAWzC,QAAO,SAACP,GAAD,OAAUA,EAAKhB,QAAUA,KAC7CwB,OAAS,EAAU,wBAE9BwC,EAAWnC,KAAK,CAAEJ,SAAUA,EAAUzB,MAAOA,EAAOE,SAAUA,IAE9De,OAAOC,aAAaU,QAAQ,QAASP,KAAK4C,UAAUD,KAC7C,GAEP/C,OAAOC,aAAaU,QAClB,QACAP,KAAK4C,UAAU,CAAC,CAAExC,SAAUA,EAAUzB,MAAOA,EAAOE,SAAUA,MEsHtCgE,CAAQlE,EAAOE,EAAUuB,GAEhB,kBAAxBqC,GAOTxD,GAAW,GACXqB,YAAW,WACT,IAAMwC,EAAa1C,GAAQ,UAAOA,EAAP,yBAC3BiB,EAAWyB,GACXhC,EAAY,IACZC,EAAS,IACTC,EAAY,IACZE,EAAmB,IACnBjC,GAAW,KACV,MAfHmC,GAAkB,SAACgB,GAAD,mBAAC,eACdA,GADa,IAEhBW,OAAQN,YAjBVrB,EAAkB,CAChBoB,YAAaN,EACbK,mBAAoBL,SAXtBd,EAAkB,CAChBmB,mBAAoBN,SAdtBb,GAAkB,SAACgB,GAAD,mBAAC,eACdA,GADa,IAEhBI,YAAaR,YAffZ,GAAkB,SAACgB,GAAD,mBAAC,eACdA,GADa,IAEhBE,SAAUb,YAfZL,GAAkB,SAACgB,GAAD,mBAAC,eACdA,GADa,IAEhBC,QAASP,QAgFf,OACE,yBAAKjF,UAAWnC,EAAWiD,UACzB,0BACEd,UAAWnC,EAAWqD,KACtBiF,SAAU,SAACzB,GAAD,OAAWD,EAAaC,KAElC,yBAAK1E,UAAWnC,EAAWyD,QACzB,kBAAC,EAAD,OAEF,yBAAKtB,UAAWnC,EAAWsD,OACzB,6DACA,2DACA,0BAAMnB,UAAWnC,EAAW6D,OACzB4C,GAAkBA,EAAe4B,QAEpC,0BAAMlG,UAAWnC,EAAWiG,SAAUA,IAExC,yBAAK9D,UAAWnC,EAAW0D,WACzB,kBAAC,EAAD,CACE3B,KAAK,OACLQ,YAAY,WACZoC,MAAOe,GAAY,GACnBd,SAAU,SAACiC,GAAD,OACRT,EAAYS,EAAM/B,OAAOH,UAG7B,0BAAMxC,UAAWnC,EAAW6D,OACzB4C,GAAkBA,EAAekB,UAGtC,yBAAKxF,UAAWnC,EAAW0D,WACzB,kBAAC,EAAD,CACE3B,KAAK,QACLQ,YAAY,QACZoC,MAAOV,GAAS,GAChBW,SAAU,SAACiC,GAAD,OACRR,EAASQ,EAAM/B,OAAOH,UAG1B,0BAAMxC,UAAWnC,EAAW6D,OACzB4C,GAAkBA,EAAemB,WAGtC,yBAAKzF,UAAWnC,EAAW0D,WACzB,kBAAC,EAAD,CACE3B,KAAK,WACLQ,YAAY,WACZoC,MAAOR,GAAY,GACnBS,SAAU,SAACiC,GAAD,OACRP,EAAYO,EAAM/B,OAAOH,UAG7B,0BAAMxC,UAAWnC,EAAW6D,OACzB4C,GAAkBA,EAAeqB,cAGtC,yBAAK3F,UAAWnC,EAAW0D,WACzB,kBAAC,EAAD,CACE3B,KAAK,WACLQ,YAAY,mBACZoC,MAAO4B,GAAmB,GAC1B3B,SAAU,SAACiC,GAAD,OACRL,EAAmBK,EAAM/B,OAAOH,UAGpC,0BAAMxC,UAAWnC,EAAW6D,OACzB4C,GAAkBA,EAAeoB,qBAGtC,kBAAC,EAAD,CACE9F,KAAK,SACLC,WAAW,UACXZ,MAAM,OACN2D,QAAS6B,EACTvF,QAASA,EACTH,SAAUG,GANZ,UAUA,yBAAKc,UAAWnC,EAAW2D,SAA3B,kCACA,kBAAC,EAAD,CAAQoB,QAAS,kBAAMP,EAAQsB,KAAK,gBAAgB1E,MAAM,QAA1D,YC5NOmH,EAjBG,WAChB,OACE,kBAAC,IAAMC,SAAP,KACE,kBAAC,IAAD,KAC+C,SAA5CtD,OAAOC,aAAaC,QAAQ,YAC3B,kBAAC,IAAD,CAAUqD,GAAG,eAEb,kBAAC,IAAMD,SAAP,KACE,kBAAC,IAAD,CAAOE,KAAK,cAAcC,UAAW5E,IACrC,kBAAC,IAAD,CAAO2E,KAAK,eAAeC,UAAWxC,QCV5CyC,EAASnG,YAAM,CACnBS,QAAS,OACT2F,cAAe,MACf1F,eAAgB,QAChB2F,WAAYnJ,EAAOoJ,UACnBC,UAAW,QACXvH,OAAQ,SAQKwH,EALA,SAACnH,GAA4C,IAClDG,EAAaH,EAAbG,SACR,OAAO,yBAAKE,UAAWyG,GAAS3G,ICZ5BT,EAAUiB,YAAM,CACpBrB,MAAO,SAQM8H,EALC,SAACpH,GAA4C,IACnDG,EAAaH,EAAbG,SACR,OAAO,yBAAKE,UAAWX,GAAUS,ICJ7BjC,EAAaC,YAAW,CAC5BkJ,UAAW,CACTC,SAAU,OACVN,WAAYnJ,EAAOgB,MACnBgB,aAAc,MACdpB,QAAS,OACT2C,QAAS,QACT9B,MAAO,OACPjB,OAAQ,OACRqD,aAAc,OACdnD,OAAQ,UACRU,UAAU,YAAD,OAAcpB,EAAOqB,MAC9BV,WAAY,MAEZW,MAAO,CACL,UAAW,CACTb,QAAS,KAIfkB,MAAO,CACLwH,WAAYnJ,EAAOuG,QACnBxF,MAAOf,EAAOgB,OAEhB0I,MAAO,CACLP,WAAYnJ,EAAOmE,OACnBpD,MAAOf,EAAOgB,SAoEH2I,EA1DC,SAACxH,GAAkB,IACzByH,EAAyCzH,EAAzCyH,QAASC,EAAgC1H,EAAhC0H,QAASC,EAAuB3H,EAAvB2H,mBADM,EAEMzF,qBAFN,mBAEzB0F,EAFyB,KAEZC,EAFY,OAGI3F,qBAHJ,mBAGzB4F,EAHyB,KAGbC,EAHa,OAIJ7F,oBAAkB,GAJd,mBAIzB8F,EAJyB,KAIjBC,EAJiB,OAKN/F,mBAAiB,GALX,mBAKzBgG,EALyB,KAKlBC,EALkB,OAMQjG,qBANR,mBAMzBkG,EANyB,KAMXC,EANW,KAiChC,OACE,kBAAC,IAAM3B,SAAP,KACGe,EAAQa,KAAI,SAACC,EAAKC,GAAN,OACX,kBAAC,EAAD,CACEC,IAAKD,EACLnI,UAAWC,YACTpC,EAAWmJ,UACXO,IAAgBY,GAAStK,EAAWsB,MACpCsI,IAAeU,GAAStK,EAAWqJ,OAErCtE,QAAS,kBAnCO,SAACyF,EAAqBF,GAC5C,IAAIR,EAAJ,CAKE,IAAIW,EAJN,GAAoB,IAAhBD,EACFb,EAAeW,GACfL,EAASD,EAAQ,QAGjBT,EAAQmB,SAAQ,SAACL,EAAKC,GACe,IAA/BD,EAAIM,cAAcnB,KAAgBiB,EAAqBH,MAE7DX,EAAec,GACfZ,EAAcS,GAEhBH,GAAgB,GAChBJ,GAAU,IAqBWa,CAAgBP,EAAIM,cAAcnB,GAAUc,KAE1DD,MAGL,kBAAC,EAAD,CACEnJ,UAAUgJ,EACVnF,QAAS,kBAxBb4E,OAAekB,GACfhB,OAAcgB,GACdd,GAAU,GACVI,GAAgB,QAChBV,EAAmBO,KAkBjB,YCzFC,SAASc,EAAYC,GAExB,IADA,IAAItF,EAASsF,EAAKtF,OACXA,KAAU,CACf,IAAMuF,EAAcC,KAAKC,MAAMD,KAAKE,UAAY1F,EAAS,IAD1C,EAEqB,CAACsF,EAAKC,GAAcD,EAAKtF,IAA5DsF,EAAKtF,GAFS,KAEAsF,EAAKC,GAFL,KAIjB,OAAOD,ECDX,IAAMK,EAAanL,YAAW,CAC5BoL,eAAgB,CACdjC,SAAU,OACV1I,MAAOf,EAAOgB,OAEhBqJ,MAAO,CACLZ,SAAU,OACV1I,MAAOf,EAAOmB,SAEhBwK,GAAI,CACFnL,OAAQ,oBACRoD,UAAW,OACXhD,QAAS,OAEXgL,GAAI,CACFtK,MAAO,CACL,oBAAqB,CACnBT,gBAAiBb,EAAOoJ,aAI9ByC,MAAO,CACLC,WAAY,oBACZC,eAAgB,WAChBtK,MAAO,OACPoC,aAAc,QAEhBmI,WAAY,CACV/H,OAAQ,mBA8DGgI,EAhDI,SAAC9J,GAAkB,IAC5BkI,EAAsBlI,EAAtBkI,MAAO6B,EAAe/J,EAAf+J,WADoB,EAEC7H,qBAFD,mBAE5B8H,EAF4B,KAEhBC,EAFgB,KAoBnC,OARAC,qBAAU,WACR,IAAIC,EAAO/G,OAAOC,aAAaC,QAAQ,cACnC8G,EAAoCD,GAAQ3G,KAAKC,MAAM0G,GACvDE,EAA4BD,EAR7BE,MAAK,SAACC,EAAqBC,GAAtB,OAA8CA,EAAEtC,MAAQqC,EAAErC,SAC/DuC,MAAM,EAAG,IAQZC,QAAQC,IAAIN,GACZJ,EAAcI,KACb,IAGD,yBAAKhK,UAAWiJ,EAAWC,gBACzB,yBAAKlJ,UAAWiJ,EAAWpB,OAAQA,GACnC,uCACA,6BAAM6B,GACN,kBAAC,EAAD,CAAQ9G,QAAS,kBAAMG,OAAOwH,SAASC,WAAvC,SACA,yBAAKxK,UAAWiJ,EAAWO,YAA3B,cACA,2BAAOxJ,UAAWiJ,EAAWI,OAC3B,+BACE,wBAAIrJ,UAAWiJ,EAAWG,IACxB,wBAAIpJ,UAAWiJ,EAAWE,IAA1B,QACA,wBAAInJ,UAAWiJ,EAAWE,IAA1B,WAGJ,+BACGQ,GACCA,EAAW1B,KAAI,SAACJ,EAAYM,GAAb,OACb,wBAAIC,IAAKD,EAAOnI,UAAWiJ,EAAWG,IACpC,wBAAIpJ,UAAWiJ,EAAWE,IAAKtB,EAAM/E,MACrC,wBAAI9C,UAAWiJ,EAAWE,IAAKtB,EAAMA,eC7E/ChK,EAAaC,YAAW,CAC5B2M,SAAU,CACR9D,WAAYnJ,EAAOgB,MACnBJ,QAAS,OACTK,SAAU,WACVe,aAAc,OACdyH,SAAU,OACV1I,MAAOf,EAAOqB,KACdwC,aAAc,OAEdvC,MAAO,CACL,WAAY,CACVL,SAAU,WACVY,QAAQ,KACRD,IAAK,OACLsL,KAAM,MACN1M,OAAQ,yBACRuB,eAAgB/B,EAAOgB,MACvBmM,gBAAiBnN,EAAOgB,WA4CjBoM,EAlCC,SAACjL,GAAkB,IACzBkL,EAASlL,EAATkL,KADwB,EAENhJ,mBAAS,GAFH,mBAEzBsG,EAFyB,KAElB2C,EAFkB,OAGIjJ,qBAHJ,mBAGzBkJ,EAHyB,KAGbC,EAHa,KAahC,OACE,kBAAC,IAAM3E,SAAP,KACI0E,EAUA,kBAAC,EAAD,CACElD,MAAK,OAAEkD,QAAF,IAAEA,OAAF,EAAEA,EAAYnH,WACnB8F,YAA2B,EAAdmB,EAAKvH,QAAYM,aAXhC,kBAAC,IAAMyC,SAAP,KACE,yBAAKrG,UAAWnC,EAAW4M,UAAWI,EAAK1C,GAAOsC,UAClD,kBAAC,EAAD,CACEnD,mBAdiB,SAACO,GACtBM,EAAQ0C,EAAKvH,OAAS,EACxBwH,EAAS3C,EAAQ,IAEjB6C,EAAcnD,GC9CQ,SAACA,GAC3B,IAAIoD,EAA0BpD,EAAMjE,WAChCL,EAAyBR,OAAOC,aAAaC,QAAQ,gBACrD0G,EAAa5G,OAAOC,aAAaC,QAAQ,cAC7C,GAAI0G,EAAY,CACd,IAAIV,EAAqD9F,KAAKC,MAC5DuG,GAEEuB,EAAW,CAAEpI,KAAMS,EAAUsE,MAAOoD,GACxChC,EAAWtF,KAAKuH,GAChBnI,OAAOC,aAAaU,QAAQ,aAAcP,KAAK4C,UAAUkD,QACpD,CACL,IAAIkC,EAAS,CAAC,CAAErI,KAAMS,EAAUsE,MAAOoD,IACvClI,OAAOC,aAAaU,QAAQ,aAAcP,KAAK4C,UAAUoF,KDkCvDC,CAAavD,KAUPT,QAASuB,EAAYkC,EAAK1C,GAAOkD,SACjChE,QAASwD,EAAK1C,GAAOmD,oB,iBE1DpBC,EACH,CACF,CACAd,SAAU,8EACNa,eAAgB,WAChBD,QAAS,CACL,gBACA,iBACA,cACA,aAGR,CACIZ,SAAU,mEACVa,eAAgB,OAChBD,QAAS,CACL,QACA,WACA,UACA,SAGR,CACIZ,SAAU,mDACVa,eAAgB,qBAChBD,QAAS,CACL,mBACA,kBACA,oBACA,uBAGR,CACIZ,SAAU,yEACVa,eAAgB,YAChBD,QAAS,CACL,SACA,QACA,cACA,cAGR,CACIZ,SAAU,+CACVa,eAAgB,qBAChBD,QAAS,CACL,sCACA,2BACA,0BACA,wBCzCVxN,EAAaC,YAAW,CAC5B0N,SAAU,CACRvM,MAAO,QACPwC,OAAQ,OACRgK,UAAW,OACXrK,UAAW,YAkCAsK,EA9BG,WAAO,IAAD,EACI7J,oBAAkB,GADtB,mBACf8J,EADe,KACRC,EADQ,OAEM/J,oBAAkB,GAFxB,mBAEfgK,EAFe,KAEPC,EAFO,KAYhBjB,EAAOlC,EAAY4C,GAEzB,OACE,yBAAKvL,UAAWnC,EAAW2N,UACvBG,EAQA,kBAAC,EAAD,CAASd,KAAMA,IAPf,kBAAC,IAAMxE,SAAP,KACE,yBAAK0F,IAAKC,IAAWC,IAAI,iBACzB,kBAAC,EAAD,CAAQ/M,QAAS2M,EAAQjJ,QAfT,WACtBkJ,GAAU,GACVrI,YAAW,WACTmI,GAAS,GACTE,GAAU,KACT,OAUG,iBCjCJjO,EAAaC,YAAW,CAC5BoO,QAAS,CACPjN,MAAO,QACP8B,QAAS,OACT2F,cAAe,SACf1F,eAAgB,SAChBmL,WAAY,SACZ7M,OAAQ,WASG8M,EALC,SAACzM,GAA4C,IACnDG,EAAaH,EAAbG,SACR,OAAO,2BAAOE,UAAWnC,EAAWqO,SAAUpM,I,QCX1CjC,EAAaC,YAAW,CAC5BuO,SAAU,CACRC,UAAW,OACXrN,MAAO,OACPK,OAAQ,OACRE,aAAc,MACdZ,UAAU,YAAD,OAAcpB,EAAOqB,MAC9B8H,WAAYnJ,EAAOgB,MAEnBM,MAAO,CACL,qBAAsB,CACpBuC,aAAc,QAEhB,WAAY,CACVzC,UAAU,YAAD,OAAcpB,EAAOqB,SAIpC0N,aAAc,CACZC,eAAgB,OAChBvN,MAAO,OACPK,OAAQ,OACRyB,QAAS,OACTC,eAAgB,SAChBmL,WAAY,YAwBDM,EAlBF,SAAC9M,GAKZ,OACE,6BACE,4BACE,wBAAIK,UAAWnC,EAAWwO,UACxB,kBAAC,IAAD,CAAMrM,UAAWnC,EAAW0O,aAAcjG,GAAG,GAAG1D,QARnC,WACnBG,OAAOC,aAAaU,QAAQ,WAAY,SACxCX,OAAOwH,SAASC,WAMV,cChCJ3M,EAAaC,YAAW,CAC5BqD,MAAO,CACL8F,SAAU,OACV1I,MAAOf,EAAOgB,MACd4C,UAAW,SACXK,OAAQ,YAoBGiL,EAhBA,WACb,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,KACE,kBAAC,EAAD,OAEF,kBAAC,EAAD,KACE,wBAAI1M,UAAWnC,EAAWsD,OAA1B,YACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOoF,KAAK,aAAaC,UAAWkF,QCL/BiB,EAjBO,SAAChN,GAAgB,IAClBiN,EAAuBjN,EAAlC6G,UAAyBzG,EADG,YACMJ,EADN,eAGpC,OACE,kBAAC,IAAD,iBACMI,EADN,CAEE8M,OAAQ,iBACsC,SAA5C9J,OAAOC,aAAaC,QAAQ,YAC1B,kBAAC2J,EAAD,MAEA,kBAAC,IAAD,CAAUtG,GAAG,qBCSRwG,EApBA,WACb,OACE,kBAAC,IAAD,CAAeC,SAAUC,aACvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAAC1G,KAAMyG,cAE6B,UAA5CjK,OAAOC,aAAaC,QAAQ,YAC5B,kBAAC,IAAD,CAAUqD,GAAG,gBACb,kBAAC,IAAD,CAAUA,GAAG,gBAGjB,kBAAC,IAAD,CAAOC,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,EAAD,CAAeA,KAAK,aAAaC,UAAWkG,OCVrCQ,EARH,WACV,OACE,4BACE,gBAAC,EAAD,QCMcC,QACW,cAA7BpK,OAAOwH,SAAS6C,UAEe,UAA7BrK,OAAOwH,SAAS6C,UAEhBrK,OAAOwH,SAAS6C,SAASC,MACvB,2DCZNC,IAAST,OACP,kBAAC,IAAMU,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAtM,GACL2I,QAAQ3I,MAAMA,EAAMuM,c","file":"static/js/main.37718362.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/quiz.b4ca43e7.png\";","export enum Colors {\n    PRIMARY = \"#2490CD\",\n    SECONDARY = \"#004b75\",\n    WHITE = \"#FFF\",\n    BLACK = \"#111\",\n    GREY = \"#808080\",\n    SUCCESS = \"#79a215\",\n    DANGER = \"#a21515\"\n}","import React from \"react\";\nimport { stylesheet, classes, keyframes } from \"typestyle\";\nimport { Colors } from \"../../constants/Colors\";\n\nconst load = keyframes({\n  \"0%\": {\n    transform: \"rotate(0deg)\"\n  },\n  \"50%\": {\n    transform: \"rotate(180deg)\",\n    opacity: \"0.35\"\n  },\n  \"100%\": {\n    transform: \"rotate(360deg)\"\n  }\n});\n\nconst classNames = stylesheet({\n  button: {\n    border: \"none\",\n    outline: \"none\",\n    cursor: \"pointer\",\n    transition: \".1s\",\n    padding: \"10px 35px\",\n    backgroundColor: Colors.BLACK,\n    color: Colors.WHITE,\n    position: \"relative\"\n  },\n  primary: {\n    backgroundColor: Colors.PRIMARY,\n    color: Colors.WHITE,\n    boxShadow: `0 0 2px ${Colors.GREY}`,\n\n    $nest: {\n      \"&:active\": {\n        boxShadow: `0 0 0px ${Colors.GREY}`\n      },\n      \"&:hover\": {\n        opacity: \".8\"\n      }\n    }\n  },\n  disabled: {\n    backgroundColor: Colors.GREY,\n    color: Colors.BLACK,\n    cursor: \"not-allowed\"\n  },\n  fullWidth: {\n    width: \"100%\"\n  },\n  loading: {\n    $nest: {\n      \"&::after\": {\n        position: \"absolute\",\n        right: \"2px\",\n        top: \"5px\",\n        content: `''`,\n        width: \"10px\",\n        height: \"10px\",\n        border: `5px solid ${Colors.WHITE}`,\n        borderTopColor: \"transparent\",\n        borderRadius: \"50%\",\n        animation: `${load} infinite linear 1s`\n      }\n    }\n  }\n});\n\nexport type TButtonType = \"primary\" | \"disabled\";\nexport type TButtonWidth = \"full\" | \"auto\";\nexport type TButtonLoading = true | false;\nexport type TButtonHandleType = \"button\" | \"submit\" | \"reset\";\n\ninterface Props extends React.HTMLProps<HTMLButtonElement> {\n  buttonType?: TButtonType;\n  width?: TButtonWidth;\n  loading?: TButtonLoading;\n  type?: TButtonHandleType;\n}\n\nconst Button = (props: Props) => {\n  const {\n    type = \"button\",\n    buttonType = \"primary\",\n    children,\n    disabled = false,\n    width = \"auto\",\n    loading = false,\n    ...rest\n  } = props;\n\n  return (\n    <button\n      className={classes(\n        classNames.button,\n        disabled ? classNames.disabled : classNames[buttonType],\n        width !== \"auto\" ? classNames.fullWidth : \"\",\n        loading ? classNames.loading : \"\"\n      )}\n      type={type}\n      disabled={disabled}\n      {...rest}\n    >\n      {children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from \"react\";\nimport { stylesheet } from \"typestyle\";\nimport { Colors } from \"../../constants/Colors\";\n\nconst classNames = stylesheet({\n  input: {\n    width: \"100%\",\n    padding: \"10px\",\n    border: `1px solid ${Colors.GREY}`,\n    transition: \".2s\",\n\n    $nest: {\n      \"&:focus\": {\n        border: `1px solid ${Colors.PRIMARY}`,\n        borderRadius: 0,\n        outline: 0\n      }\n    }\n  }\n});\n\ninterface Props extends React.InputHTMLAttributes<HTMLInputElement> {\n  placeholder?: string;\n}\n\nconst Input = (props: Props) => {\n  const { placeholder, type, ...rest } = props;\n\n  return (\n    <input\n      placeholder={placeholder}\n      className={classNames.input}\n      type={type}\n      {...rest}\n    />\n  );\n};\n\nexport default Input;\n","import React from \"react\";\nimport { Colors } from \"../../constants/Colors\";\n\nconst AvatarIcon = () => {\n  const style: React.CSSProperties = {\n    fill: Colors.GREY,\n    fillOpacity: 1,\n    fillRule: \"nonzero\",\n    stroke: \"none\",\n    width: \"50px\",\n    height: \"50px\"\n  };\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 479 479\" style={style}>\n      <path d=\"M239.5 0C107.2 0 0 107.2 0 239.5S107.2 479 239.5 479 479 371.8 479 239.5 371.8 0 239.5 0zM390.9 360.7c-1.8-15.6-8.4-33.2-28.2-38.2 -37.9-9.6-68.7-31.3-68.7-31.3l-24 76 -4.5 14.3 -0.1-0.2 -3.9 12.1 -12.7-36c32.1-44.7-8.5-43-8.5-43s-40.5-1.7-8.5 43L219 393.6l-3.9-12.2 -28.6-90.3c0 0-30.8 21.7-68.7 31.3 -19.8 5-26.4 22.6-28.2 38.2 -26.7-33.1-42.7-75.2-42.7-121.1 0-106.8 86.6-193.4 193.4-193.4s193.4 86.6 193.4 193.4C433.7 285.4 417.6 327.5 390.9 360.7z\" />\n      <path d=\"M309.9 189.6c1.2-3.4 2.1-6.7 2.7-10.1C323.1 116.2 292 114 292 114s-5.2-9.9-18.8-17.4c-9.1-5.4-21.8-9.6-38.6-8.1 -5.4 0.3-10.5 1.3-15.4 2.9l0 0c-6.2 2.1-11.8 5.1-16.9 8.7 -6.3 4-12.2 8.8-17.4 14.4 -8.3 8.4-15.6 19.3-18.8 32.9 -2.7 10.2-2.1 20.8 0.1 32.2l0 0c0.6 3.3 1.5 6.7 2.7 10.1 -6.2-0.6-13.6 3-6.6 27.5 5.1 17.9 9.8 22.9 13.3 23.2 3.3 21.3 19.6 48.3 46.6 57.8 11 3.9 23.2 3.9 34.2-0.1 26.5-9.6 43.4-36.5 46.7-57.7 3.6-0.3 8.3-5.3 13.3-23.2C323.5 192.6 316.2 189 309.9 189.6z\" />\n    </svg>\n  );\n};\n\nexport default AvatarIcon;\n","import React, { useState } from \"react\";\nimport { stylesheet } from \"typestyle\";\nimport { Colors } from \"../../constants/Colors\";\nimport Button from \"../../components/Button/Button\";\nimport Input from \"../../components/Input/Input\";\nimport AvatarIcon from \"../../components/Icon/AvatarIcon\";\nimport { useHistory } from \"react-router\";\nimport { loginUser } from \"../../utils/authHandlers\";\n\ninterface Props {}\n\nconst classNames = stylesheet({\n  formWrap: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingTop: \"50px\"\n  },\n  form: {\n    width: \"350px\",\n    boxShadow: `0 0 5px ${Colors.GREY}`,\n    padding: \"20px\"\n  },\n  title: {\n    textAlign: \"center\",\n    marginBottom: \"25px\",\n\n    $nest: {}\n  },\n  avatar: {\n    textAlign: \"center\",\n    marginBottom: \"15px\"\n  },\n  inputWrap: {\n    marginBottom: \"25px\"\n  },\n  breaker: {\n    margin: \"10px 0\",\n    textAlign: \"center\"\n  },\n  error: {\n    color: Colors.DANGER\n  }\n});\n\nconst Login = (props: Props) => {\n  const [email, setemail] = useState<string | any>();\n  const [password, setpassword] = useState<string | any>();\n  const [err, seterr] = useState<string | any>();\n  const [loading, setloading] = useState(false);\n  const history = useHistory();\n\n  const handleLogin = () => {\n    let login = loginUser(email, password);\n    setloading(true);\n    setTimeout(() => {\n      if (!login) {\n        seterr(\"Email or Password does not match\");\n      } else {\n        window.localStorage.setItem(\"loggedIn\", \"true\");\n        history.push(\"/user/quiz\");\n      }\n      setloading(false);\n      window.localStorage.setItem(\"loggedInUser\", login.toString());\n    }, 500);\n  };\n\n  return (\n    <div className={classNames.formWrap}>\n      <form className={classNames.form} autoComplete=\"off\">\n        <div className={classNames.avatar}>\n          <AvatarIcon />\n        </div>\n        <div className={classNames.title}>\n          <h5>Login to play Quiz</h5>\n          <p>Enter your credentials below</p>\n          <span className={classNames.error}>{err}</span>\n        </div>\n        <div className={classNames.inputWrap}>\n          <Input\n            type=\"text\"\n            placeholder=\"Email\"\n            value={email || \"\"}\n            onChange={(e) => setemail(e.target.value)}\n          />\n        </div>\n        <div className={classNames.inputWrap}>\n          <Input\n            type=\"password\"\n            placeholder=\"Passwords\"\n            value={password || \"\"}\n            onChange={(e) => setpassword(e.target.value)}\n          />\n        </div>\n        <Button\n          loading={loading}\n          disabled={loading}\n          buttonType=\"primary\"\n          onClick={handleLogin}\n          width=\"full\"\n        >\n          Login\n        </Button>\n        <div className={classNames.breaker}>- - OR - -</div>\n        <Button\n          buttonType=\"primary\"\n          onClick={() => history.push(\"/auth/signup\")}\n          width=\"full\"\n        >\n          Signup\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Login;\n","export const newUser = (\n  email: \"string\",\n  password: \"string\",\n  username: string\n) => {\n  let users = window.localStorage.getItem(\"users\");\n  if (users) {\n    let usersArray: Array<{\n      username: string;\n      email: string;\n      password: string;\n    }> = JSON.parse(users);\n    let exists = usersArray.filter((user) => user.email === email);\n    if (exists.length > 0) return \"User already exists!\";\n\n    usersArray.push({ username: username, email: email, password: password });\n\n    window.localStorage.setItem(\"users\", JSON.stringify(usersArray));\n    return true;\n  } else {\n    window.localStorage.setItem(\n      \"users\",\n      JSON.stringify([{ username: username, email: email, password: password }])\n    );\n  }\n};\n\nexport const loginUser = (email: string, password: string) => {\n  let user = window.localStorage.getItem(\"users\");\n  let userArray: Array<{ username: string; email: string; password: string }> =\n    user && JSON.parse(user);\n  let noExists = userArray.filter(\n    (user) => user.email === email && user.password === password\n  );\n  if (noExists.length > 0) return noExists[0].username;\n  return false;\n};\n","export const validateEmail = (email: string) => {\n  if (!email) return \"Email is required!\";\n  if (email && email.length > 0) {\n    const emailRegex = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    let validEmail = emailRegex.test(String(email).toLowerCase());\n    if (!validEmail) return \"Not a valid email!\";\n  }\n\n  if (email && email.length === 0) return \"Email is required!\";\n\n  return true;\n};\n\nexport const validatePassword = (password: string) => {\n  if (!password) return \"Password required\";\n  if (password && password.length < 5)\n    return \"Password Must be atleast 5 characters\";\n  return true;\n};\n\nexport const validatePasswordMatch = (\n  password: string,\n  confirmPassword: string\n) => {\n  if (password !== confirmPassword) {\n    return \"Passwords do not Match!\";\n  }\n  return true;\n};\n\nexport const validateUserName = (username: string) => {\n  if (!username || username.length === 0) {\n    return \"Username is required\";\n  }\n  return true;\n};\n","import React, { useState } from \"react\";\nimport { stylesheet } from \"typestyle\";\nimport { Colors } from \"../../constants/Colors\";\nimport Button from \"../../components/Button/Button\";\nimport Input from \"../../components/Input/Input\";\nimport AvatarIcon from \"../../components/Icon/AvatarIcon\";\nimport { useHistory } from \"react-router\";\nimport { newUser } from \"../../utils/authHandlers\";\nimport {\n  validateEmail,\n  validatePassword,\n  validatePasswordMatch,\n  validateUserName\n} from \"../../utils/formValidator\";\n\nconst classNames = stylesheet({\n  formWrap: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    paddingTop: \"50px\"\n  },\n  form: {\n    width: \"350px\",\n    boxShadow: `0 0 5px ${Colors.GREY}`,\n    padding: \"20px\"\n  },\n  title: {\n    textAlign: \"center\",\n    marginBottom: \"25px\",\n\n    $nest: {}\n  },\n  inputWrap: {\n    marginBottom: \"25px\"\n  },\n  avatar: {\n    textAlign: \"center\",\n    marginBottom: \"15px\"\n  },\n  breaker: {\n    margin: \"10px 0\",\n    textAlign: \"center\"\n  },\n  error: {\n    color: Colors.DANGER\n  },\n  success: {\n    color: Colors.SUCCESS\n  }\n});\n\ninterface formValidationError {\n  userErr: any;\n  emailErr: any;\n  passwordErr: any;\n  confirmPasswordErr: any;\n  exists: any;\n}\n\nconst Signup = () => {\n  const [username, setUserName] = useState<string | any>();\n  const [email, setEmail] = useState<string | any>();\n  const [password, setPassword] = useState<string | any>();\n  const [confirmPassword, setConfirmPassword] = useState<string | any>();\n  const [formValidation, setformValidation] = useState<\n    formValidationError | any\n  >();\n  const [success, setsuccess] = useState<string>();\n  const [loading, setloading] = useState(false);\n  const history = useHistory();\n\n  const handleSignup = (event: React.FormEvent) => {\n    event.preventDefault();\n    const validEmail = validateEmail(email);\n    const validUsername = validateUserName(username);\n    const validPassword = validatePassword(password);\n    const validConfirmPassword = validatePassword(password);\n    const validPasswordMatch = validatePasswordMatch(password, confirmPassword);\n\n    if (typeof validUsername === \"string\") {\n      setformValidation((state: any) => ({\n        ...state,\n        userErr: validUsername\n      }));\n      return;\n    } else {\n      setformValidation((state: any) => ({\n        ...state,\n        userErr: \"\"\n      }));\n    }\n\n    if (typeof validEmail === \"string\") {\n      setformValidation((state: any) => ({\n        ...state,\n        emailErr: validEmail\n      }));\n      return;\n    } else {\n      setformValidation((state: any) => ({\n        ...state,\n        emailErr: \"\"\n      }));\n    }\n\n    if (typeof validPassword === \"string\") {\n      setformValidation((state: any) => ({\n        ...state,\n        passwordErr: validPassword\n      }));\n      return;\n    } else {\n      setformValidation((state: any) => ({\n        ...state,\n        emailErr: \"\"\n      }));\n    }\n\n    if (typeof validConfirmPassword === \"string\") {\n      setformValidation({\n        confirmPasswordErr: validConfirmPassword\n      });\n      return;\n    } else {\n      setformValidation({ confirmPasswordErr: \"\" });\n    }\n\n    if (typeof validPasswordMatch === \"string\") {\n      setformValidation({\n        passwordErr: validPasswordMatch,\n        confirmPasswordErr: validPasswordMatch\n      });\n      return;\n    } else {\n      setformValidation({\n        passwordErr: \"\",\n        confirmPasswordErr: \"\"\n      });\n    }\n\n    let newUserRegistration = newUser(email, password, username);\n\n    if (typeof newUserRegistration === \"string\") {\n      setformValidation((state: any) => ({\n        ...state,\n        exists: newUserRegistration\n      }));\n      return;\n    } else {\n      setloading(true);\n      setTimeout(() => {\n        const successMsg = username && `${username} has been registered!`;\n        setsuccess(successMsg);\n        setUserName(\"\");\n        setEmail(\"\");\n        setPassword(\"\");\n        setConfirmPassword(\"\");\n        setloading(false);\n      }, 500);\n    }\n  };\n\n  return (\n    <div className={classNames.formWrap}>\n      <form\n        className={classNames.form}\n        onSubmit={(event) => handleSignup(event)}\n      >\n        <div className={classNames.avatar}>\n          <AvatarIcon />\n        </div>\n        <div className={classNames.title}>\n          <h5>Singup to create your account</h5>\n          <p>Enter your credentials below</p>\n          <span className={classNames.error}>\n            {formValidation && formValidation.exists}\n          </span>\n          <span className={classNames.success}>{success}</span>\n        </div>\n        <div className={classNames.inputWrap}>\n          <Input\n            type=\"text\"\n            placeholder=\"Username\"\n            value={username || \"\"}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              setUserName(event.target.value)\n            }\n          />\n          <span className={classNames.error}>\n            {formValidation && formValidation.userErr}\n          </span>\n        </div>\n        <div className={classNames.inputWrap}>\n          <Input\n            type=\"email\"\n            placeholder=\"Email\"\n            value={email || \"\"}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              setEmail(event.target.value)\n            }\n          />\n          <span className={classNames.error}>\n            {formValidation && formValidation.emailErr}\n          </span>\n        </div>\n        <div className={classNames.inputWrap}>\n          <Input\n            type=\"password\"\n            placeholder=\"Password\"\n            value={password || \"\"}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              setPassword(event.target.value)\n            }\n          />\n          <span className={classNames.error}>\n            {formValidation && formValidation.passwordErr}\n          </span>\n        </div>\n        <div className={classNames.inputWrap}>\n          <Input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            value={confirmPassword || \"\"}\n            onChange={(event: React.ChangeEvent<HTMLInputElement>) =>\n              setConfirmPassword(event.target.value)\n            }\n          />\n          <span className={classNames.error}>\n            {formValidation && formValidation.confirmPasswordErr}\n          </span>\n        </div>\n        <Button\n          type=\"submit\"\n          buttonType=\"primary\"\n          width=\"full\"\n          onClick={handleSignup}\n          loading={loading}\n          disabled={loading}\n        >\n          Signup\n        </Button>\n        <div className={classNames.breaker}>-- or login to your account --</div>\n        <Button onClick={() => history.push(\"/auth/login\")} width=\"full\">\n          Login\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React from \"react\";\nimport { Route, Switch, Redirect } from \"react-router\";\nimport Login from \"../pages/Login/Login\";\nimport Signup from \"../pages/Signup/Signup\";\n\nconst AuthRoute = () => {\n  return (\n    <React.Fragment>\n      <Switch>\n        {window.localStorage.getItem(\"loggedIn\") === \"true\" ? (\n          <Redirect to=\"/user/quiz\" />\n        ) : (\n          <React.Fragment>\n            <Route path=\"/auth/login\" component={Login} />\n            <Route path=\"/auth/signup\" component={Signup} />\n          </React.Fragment>\n        )}\n      </Switch>\n    </React.Fragment>\n  );\n};\n\nexport default AuthRoute;\n","import React from \"react\";\nimport { style } from \"typestyle\";\nimport { Colors } from \"../../constants/Colors\";\n\nconst layout = style({\n  display: \"flex\",\n  flexDirection: \"row\",\n  justifyContent: \"start\",\n  background: Colors.SECONDARY,\n  minHeight: \"100vh\",\n  height: \"100%\"\n});\n\nconst Layout = (props: React.HTMLProps<HTMLDivElement>) => {\n  const { children } = props;\n  return <div className={layout}>{children}</div>;\n};\n\nexport default Layout;\n","import React from \"react\";\nimport { style } from \"typestyle\";\n\nconst content = style({\n  width: \"100%\",\n});\n\nconst Content = (props: React.HTMLProps<HTMLDivElement>) => {\n  const { children } = props;\n  return <div className={content}>{children}</div>;\n};\n\nexport default Content;\n","import React, { useState } from \"react\";\nimport { stylesheet, classes } from \"typestyle\";\nimport { Colors } from \"../../../constants/Colors\";\nimport Button from \"../../../components/Button/Button\";\n\nconst classNames = stylesheet({\n  answerBtn: {\n    fontSize: \"20px\",\n    background: Colors.WHITE,\n    borderRadius: \"4px\",\n    padding: \"20px\",\n    display: \"block\",\n    width: \"100%\",\n    border: \"none\",\n    marginBottom: \"20px\",\n    cursor: \"pointer\",\n    boxShadow: `0 0 10px ${Colors.GREY}`,\n    transition: \".3s\",\n\n    $nest: {\n      \"&:focus\": {\n        outline: 0\n      }\n    }\n  },\n  right: {\n    background: Colors.SUCCESS,\n    color: Colors.WHITE\n  },\n  wrong: {\n    background: Colors.DANGER,\n    color: Colors.WHITE\n  }\n});\n\ninterface Props {\n  answers: Array<string>;\n  correct: string;\n  handleNextQuestion: Function;\n}\n\nconst Answers = (props: Props) => {\n  const { answers, correct, handleNextQuestion } = props;\n  const [activeIndex, setactiveIndex] = useState<number>();\n  const [wrongIndex, setwrongIndex] = useState<number>();\n  const [chosen, setChosen] = useState<boolean>(false);\n  const [score, setScore] = useState<number>(0);\n  const [submitEnable, setSubmitEnable] = useState<boolean>();\n\n  const handleSelection = (checkAnswer: number, index: number) => {\n    if (chosen) return;\n    if (checkAnswer === 0) {\n      setactiveIndex(index);\n      setScore(score + 2);\n    } else {\n      let correctAnswerIndex;\n      answers.forEach((ans, index) => {\n        if (ans.localeCompare(correct) === 0) correctAnswerIndex = index;\n      });\n      setactiveIndex(correctAnswerIndex);\n      setwrongIndex(index);\n    }\n    setSubmitEnable(true);\n    setChosen(true);\n  };\n\n  const handleSubmit = () => {\n    setactiveIndex(undefined);\n    setwrongIndex(undefined);\n    setChosen(false);\n    setSubmitEnable(false);\n    handleNextQuestion(score);\n  };\n\n  return (\n    <React.Fragment>\n      {answers.map((ans, index) => (\n        <Button\n          key={index}\n          className={classes(\n            classNames.answerBtn,\n            activeIndex === index && classNames.right,\n            wrongIndex === index && classNames.wrong\n          )}\n          onClick={() => handleSelection(ans.localeCompare(correct), index)}\n        >\n          {ans}\n        </Button>\n      ))}\n      <Button\n        disabled={submitEnable ? false : true}\n        onClick={() => handleSubmit()}\n      >\n        Submit\n      </Button>\n    </React.Fragment>\n  );\n};\n\nexport default Answers;\n","export function shuffleQuiz(data: Array<any>) {\n    let length = data.length;\n    while (length--) {\n      const randomIndex = Math.floor(Math.random() * (length + 1));\n      [data[length], data[randomIndex]] = [data[randomIndex], data[length]];\n    }\n    return data;\n  }","import React, { useEffect, useState } from \"react\";\nimport { stylesheet } from \"typestyle\";\nimport { Colors } from \"../../../constants/Colors\";\nimport Button from \"../../../components/Button/Button\";\n\nconst scoreboard = stylesheet({\n  scoreboardWrap: {\n    fontSize: \"40px\",\n    color: Colors.WHITE\n  },\n  score: {\n    fontSize: \"60px\",\n    color: Colors.PRIMARY\n  },\n  td: {\n    border: \"1px solid #dddddd\",\n    textAlign: \"left\",\n    padding: \"8px\"\n  },\n  tr: {\n    $nest: {\n      \"&:nth-child(even)\": {\n        backgroundColor: Colors.SECONDARY\n      }\n    }\n  },\n  table: {\n    fontFamily: \"arial, sans-serif\",\n    borderCollapse: \"collapse\",\n    width: \"100%\",\n    marginBottom: \"25px\"\n  },\n  scoreTitle: {\n    margin: \"30px 0 20px 0\"\n  }\n});\n\ninterface Props {\n  score: string | any;\n  totalScore: string;\n}\n\ninterface ScoreBoard {\n  user: string;\n  score: string;\n}\n\nconst FinalScore = (props: Props) => {\n  const { score, totalScore } = props;\n  const [scoreBoard, setscoreBoard] = useState<Array<ScoreBoard> | any>();\n\n  const topTenScorer = (scoreBoardList: Array<ScoreBoard>) => {\n    let list = scoreBoardList;\n    let sortedList = list\n      .sort((a: ScoreBoard | any, b: ScoreBoard | any) => b.score - a.score)\n      .slice(0, 10);\n      return sortedList;\n  };\n\n  useEffect(() => {\n    let json = window.localStorage.getItem(\"scoreBoard\");\n    let scoreboardList: Array<ScoreBoard> = json && JSON.parse(json);\n    let TopTenScorer = topTenScorer(scoreboardList);\n    console.log(TopTenScorer);\n    setscoreBoard(TopTenScorer);\n  }, []);\n\n  return (\n    <div className={scoreboard.scoreboardWrap}>\n      <div className={scoreboard.score}>{score}</div>\n      <div>Out of</div>\n      <div>{totalScore}</div>\n      <Button onClick={() => window.location.reload()}>Retry</Button>\n      <div className={scoreboard.scoreTitle}>ScoreBoard</div>\n      <table className={scoreboard.table}>\n        <thead>\n          <tr className={scoreboard.tr}>\n            <th className={scoreboard.td}>User</th>\n            <th className={scoreboard.td}>Score</th>\n          </tr>\n        </thead>\n        <tbody>\n          {scoreBoard &&\n            scoreBoard.map((score: any, index: number) => (\n              <tr key={index} className={scoreboard.tr}>\n                <td className={scoreboard.td}>{score.user}</td>\n                <td className={scoreboard.td}>{score.score}</td>\n              </tr>\n            ))}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default FinalScore;\n","import React, { useState } from \"react\";\nimport { stylesheet } from \"typestyle\";\nimport { Colors } from \"../../../constants/Colors\";\nimport { QuizProps } from \"./interface\";\nimport Answers from \"./Answers\";\nimport { shuffleQuiz } from \"../../../utils/shuffler\";\nimport FinalScore from \"./FinalScore\";\nimport { scoreHandler } from \"../../../utils/scoreHandler\";\n\nconst classNames = stylesheet({\n  question: {\n    background: Colors.WHITE,\n    padding: \"20px\",\n    position: \"relative\",\n    borderRadius: \"10px\",\n    fontSize: \"30px\",\n    color: Colors.GREY,\n    marginBottom: \"80px\",\n\n    $nest: {\n      \"&::after\": {\n        position: \"absolute\",\n        content: `''`,\n        top: \"100%\",\n        left: \"40%\",\n        border: \"20px solid transparent\",\n        borderTopColor: Colors.WHITE,\n        borderLeftColor: Colors.WHITE\n      }\n    }\n  }\n});\n\ninterface Props {\n  quiz: Array<QuizProps>;\n}\n\nconst QuizApp = (props: Props) => {\n  const { quiz } = props;\n  const [index, setindex] = useState(0);\n  const [finalscore, setfinalScore] = useState<number>();\n\n  const handleNextQuestion = (score: number) => {\n    if (index < quiz.length - 1) {\n      setindex(index + 1);\n    } else {\n      setfinalScore(score);\n      scoreHandler(score);\n    }\n  };\n  return (\n    <React.Fragment>\n      {!finalscore ? (\n        <React.Fragment>\n          <div className={classNames.question}>{quiz[index].question}</div>\n          <Answers\n            handleNextQuestion={handleNextQuestion}\n            answers={shuffleQuiz(quiz[index].options)}\n            correct={quiz[index].correct_answer}\n          />\n        </React.Fragment>\n      ) : (\n        <FinalScore\n          score={finalscore?.toString()}\n          totalScore={(quiz.length * 2).toString()}\n        />\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default QuizApp;\n","export const scoreHandler = (score: number) => {\n  let userScore: string | any = score.toString();\n  let username: string | any = window.localStorage.getItem(\"loggedInUser\");\n  let scoreBoard = window.localStorage.getItem(\"scoreBoard\");\n  if (scoreBoard) {\n    let scoreboard: Array<{ user: string; score: string }> = JSON.parse(\n      scoreBoard\n    );\n    let newScore = { user: username, score: userScore };\n    scoreboard.push(newScore);\n    window.localStorage.setItem(\"scoreBoard\", JSON.stringify(scoreboard));\n  } else {\n    let scorer = [{ user: username, score: userScore }];\n    window.localStorage.setItem(\"scoreBoard\", JSON.stringify(scorer));\n  }\n};\n","export const Quiz = {\n    data: [\n        {\n        question: \"Which one of the following titles by Valve is not based on a Community Mod?\",\n            correct_answer: \"Ricochet\",\n            options: [\n                \"Day of Defeat\",\n                \"Counter-Strike\",\n                \"Alien Swarm\",\n                \"Ricochet\"\n            ]\n        },\n        {\n            question: \"Which of these is NOT an island that is part of the Philippines?\",\n            correct_answer: \"Java\",\n            options: [\n                \"Luzon\",\n                \"Mindanao\",\n                \"Palawan\",\n                \"Java\"\n            ]\n        },\n        {\n            question: \"In what Homestuck Update was Game Over released?\",\n            correct_answer: \"October 25th, 2014\",\n            options: [\n                \"April 13th, 2009\",\n                \"April 8th, 2012\",\n                \"August 28th, 2003\",\n                \"October 25th, 2014\"\n            ]\n        },\n        {\n            question: \"What was the first Android version specifically optimized for tablets?\",\n            correct_answer: \"Honeycomb\",\n            options: [\n                \"Eclair\",\n                \"Froyo\",\n                \"Marshmellow\",\n                \"Honeycomb\"\n            ]\n        },\n        {\n            question: \"Which of these songs did Jimi Hendrix cover?\",\n            correct_answer: \"All of these songs\",\n            options: [\n                \"Sgt. Pepper Lonely Hearts Club Band\",\n                \"All Along the Watchtower\",\n                \"House of the Rising Sun\",\n                \"All of these songs\"\n            ]\n        },\n    ]\n}","import React, { useState } from \"react\";\nimport Button from \"../../components/Button/Button\";\nimport QuizApp from \"./QuizStart/QuizApp\";\nimport { stylesheet } from \"typestyle\";\nimport QuizImage from \"../../assets/quiz.png\";\nimport { Quiz } from \"../../utils/quiz\";\nimport { shuffleQuiz } from \"../../utils/shuffler\";\n\nconst classNames = stylesheet({\n  quizWrap: {\n    width: \"600px\",\n    margin: \"auto\",\n    marginTop: \"50px\",\n    textAlign: \"center\"\n  }\n});\n\nconst QuizStart = () => {\n  const [start, setStart] = useState<boolean>(false);\n  const [loader, setLoader] = useState<boolean>(false);\n\n  const handleQuizStart = () => {\n    setLoader(true);\n    setTimeout(() => {\n      setStart(true);\n      setLoader(false);\n    }, 500);\n  };\n\n  const quiz = shuffleQuiz(Quiz.data);\n\n  return (\n    <div className={classNames.quizWrap}>\n      {!start ? (\n        <React.Fragment>\n          <img src={QuizImage} alt=\"Quiz starter\" />\n          <Button loading={loader} onClick={handleQuizStart}>\n            Start Quiz\n          </Button>\n        </React.Fragment>\n      ) : (\n        <QuizApp quiz={quiz} />\n      )}\n    </div>\n  );\n};\n\nexport default QuizStart;\n","import React from \"react\";\nimport { stylesheet } from \"typestyle\";\n\nconst classNames = stylesheet({\n  sidebar: {\n    width: \"150px\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100vh\"\n  }\n});\n\nconst SideBar = (props: React.HTMLProps<HTMLDivElement>) => {\n  const { children } = props;\n  return <aside className={classNames.sidebar}>{children}</aside>;\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport { stylesheet } from \"typestyle\";\nimport { Link } from \"react-router-dom\";\nimport { Colors } from \"../../constants/Colors\";\n\nconst classNames = stylesheet({\n  menuItem: {\n    listStyle: \"none\",\n    width: \"80px\",\n    height: \"80px\",\n    borderRadius: \"50%\",\n    boxShadow: `0 0 20px ${Colors.GREY}`,\n    background: Colors.WHITE,\n\n    $nest: {\n      \"&:not(:last-child)\": {\n        marginBottom: \"20px\"\n      },\n      \"&:active\": {\n        boxShadow: `0 0 10px ${Colors.GREY}`\n      }\n    }\n  },\n  menuItemLink: {\n    textDecoration: \"none\",\n    width: \"100%\",\n    height: \"100%\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  }\n});\n\ninterface Props {}\n\nconst Menu = (props: Props) => {\n  const handleLogout = () => {\n    window.localStorage.setItem(\"loggedIn\", \"false\");\n    window.location.reload();\n  }\n  return (\n    <div>\n      <ul>\n        <li className={classNames.menuItem}>\n          <Link className={classNames.menuItemLink} to=\"\" onClick={handleLogout}>\n            logout\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport Layout from \"../components/Layout/Layout\";\n// import SideBar from \"../components/SideBar/SideBar\";\n// import Menu from \"../components/Menu/Menu\";\nimport Content from \"../components/Layout/Content\";\nimport QuizStart from \"../pages/Quiz/QuizStart\";\nimport { stylesheet } from \"typestyle\";\nimport { Colors } from \"../constants/Colors\";\nimport { Switch, Route } from \"react-router\";\nimport SideBar from \"../components/SideBar/SideBar\";\nimport Menu from \"../components/Menu/Menu\";\n\nconst classNames = stylesheet({\n  title: {\n    fontSize: \"40px\",\n    color: Colors.WHITE,\n    textAlign: \"center\",\n    margin: \"20px 0\"\n  }\n});\n\nconst Routes = () => {\n  return (\n    <Layout>\n      <SideBar>\n        <Menu />\n      </SideBar>\n      <Content>\n        <h1 className={classNames.title}>Quiz App</h1>\n        <Switch>\n          <Route path=\"/user/quiz\" component={QuizStart} />\n        </Switch>\n      </Content>\n    </Layout>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router\";\n\n// interface Props {\n//   Component: React.Component<JSX.Element | any>;\n//   loggedIn: boolean | any;\n// }\n\nconst PrivateRoutes = (props: any) => {\n  const { component: Component, ...rest } = props;\n\n  return (\n    <Route\n      {...rest}\n      render={() =>\n        window.localStorage.getItem(\"loggedIn\") === \"true\" ? (\n          <Component />\n        ) : (\n          <Redirect to=\"/auth/login\" />\n        )\n      }\n    />\n  );\n};\n\nexport default PrivateRoutes;\n","import React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router\";\nimport AuthRoute from \"./AuthRoute\";\nimport Routes from \"../pages/Routes\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport PrivateRoutes from \"./PrivateRoutes\";\n\nconst Router = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Switch>\n        <Route exact path={process.env.PUBLIC_URL + \"/\"}>\n          {\n            window.localStorage.getItem(\"loggedIn\") === \"false\" ? \n            <Redirect to=\"/auth/login\" /> : \n            <Redirect to=\"/user/quiz\" />\n          }\n        </Route>\n        <Route path=\"/auth\">\n          <AuthRoute />\n        </Route>\n        <PrivateRoutes path=\"/user/quiz\" component={Routes} />\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default Router;\n","import * as React from \"react\";\nimport Router from \"./Router/Router\";\n\nconst App = () => {\n  return (\n    <main>\n      <Router />\n    </main>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}